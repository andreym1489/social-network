{"version":3,"sources":["API/API.js","redux/dialogs-reducer.js","components/Users/User.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","utils/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/HOC/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","assets/images/Spinner-1s-200px.gif","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js","components/Header/Header.module.css","assets/images/ava.jpg"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getUserProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profileData","authAPI","me","login","userData","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageText","addMessageActionCreator","newMessageBody","type","newMessage","dialogsReducer","state","action","module","exports","Navbar","className","s","nav","item","to","activeClassName","active","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","onPageChanged","User","user","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","userItem","Users","console","log","users","container","u","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_IS_FETCHING","SET_FOLLOWING_IN_PROGRESS","isFetching","followSuccess","unfollowSuccess","setUsers","setIsFetching","setFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","getAllUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","auth","isAuth","UsersContainer","setCurrentPage","this","Preloader","React","Component","compose","connect","bind","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","getCaptchaUrlSuccess","payload","getAuthUserData","url","authReducer","alert","header","loginBlock","HeaderContainer","maxLength35","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","CreateField","Input","required","Field","component","formSummaryError","error","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","store","createStore","require","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","formReducer","app","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById","FormControl","input","meta","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","validate","value","maxLength","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO_SUCCESS","SET_SAVING_PROFILE","posts","likeCounts","profile","addPost","newPostBody","newPost","setStatus","setSavingProfile","file","getState","Promise","reject"],"mappings":"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","file":"static/js/main.cca1ce9a.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\nimport {savePhoto} from \"../redux/profile-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"492de92e-04f3-441e-8b79-42a0931935eb\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profileData) {\r\n        return instance.put(`profile`, profileData)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(userData) {\r\n        return instance.post('auth/login', {\r\n            email: userData.email,\r\n            password: userData.password,\r\n            rememberMe: userData.rememberMe,\r\n            captcha: userData.captcha\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Valera' },\r\n        { id: 6, name: 'Victor' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hello' },\r\n        { id: 2, message: 'How is your name?' },\r\n        { id: 3, message: 'Yoooo' },\r\n        { id: 4, message: 'ASFASFAS' }\r\n    ],\r\n    newMessageText: 'hello)'\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessage\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessage: newMessageBody\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"User_userItem__2Q9iG\",\"selectedPage\":\"User_selectedPage__3ilpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Users_selectedPage__2YPEK\",\"container\":\"Users_container__1onIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6Box0\",\"item\":\"Navbar_item__ZQtYh\",\"active\":\"Navbar_active__1gCCT\"};","import s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/social-network/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/social-network/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/social-network/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import s from './Paginator.module.css'\r\nimport React, {useState} from \"react\";\r\nimport cn from 'classnames'\r\n\r\nconst Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionSize = 10;\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [s.selectedPage]: props.currentPage === p\r\n                    }, s.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n\r\n","import userPhoto from '../../assets/images/ava.jpg';\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../API/API\";\r\nimport s from \"./User.module.css\"\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/social-network/profile/${props.user.id}`}>\r\n                        <img src={props.user.photos.small !== null ? props.user.photos.small : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                      onClick={() => props.unfollow(props.user.id)}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                      onClick={() => usersAPI.follow(props.user.id)}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <div className={s.userItem}>\r\n                    <div>\r\n                        <b>Name</b>: {props.user.name}\r\n                    </div>\r\n                    <div>\r\n                        <b>Status</b>: {props.user.status\r\n                                        ? props.user.status\r\n                                        : 'No status'}\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport s from './Users.module.css'\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    console.log(props.users)\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {\r\n                props.users.map(u => <User user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           follow={props.follow}\r\n                                           unfollow={props.unfollow}/>)\r\n            }\r\n            <Paginator currentPage={props.currentPage}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../API/API\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SET_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const setIsFetching = (isFetching) => ({type: SET_IS_FETCHING, isFetching});\r\nexport const setFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: SET_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    dispatch(setFollowingInProgress(false, userId));\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {createSelector} from \"reselect\";\r\n\r\nexport const getAllUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n//\r\n// export const getAllUsersSelector = (state) => {\r\n//     return getAllUsers(state).filter(u => true)\r\n// }\r\n//\r\n// export const getAllUsersSuperSelector = createSelector(getAllUsers,  (users) => {\r\n//     return users.filter(u => true);\r\n// })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n","import Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage, setFollowingInProgress, setIsFetching, setUsers,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {usersAPI} from \"../../API/API\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getAllUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber)\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(response => {\r\n                this.props.setIsFetching(false);\r\n                this.props.setUsers(response.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null\r\n            }\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />;\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        setFollowingInProgress,\r\n        setIsFetching,\r\n        setUsers,\r\n        getUsers\r\n    }\r\n))(UsersContainer);","import {authAPI, securityAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    captchaUrl: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data: {userId, email, login, isAuth}});\r\nconst getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (userData) => async (dispatch) => {\r\n    let response = await authAPI.login(userData)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        alert('Вы успешно авторизованы')\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        alert('Вы успешно вышли с аккаунта')\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <span>Social-network</span>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import {Field, reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport s from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst maxLength35 = maxLengthCreator(35);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {CreateField(\"Email\", \"email\", \"\", Input, [required, maxLength35])}\r\n            </div>\r\n            <div>\r\n                {CreateField(\"Password\", \"password\", \"password\", Input, [required, maxLength35])}\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" name=\"rememberMe\" component=\"input\"/> remember me\r\n            </div>\r\n            {props.captchaUrl &&\r\n                <img src={props.captchaUrl} />\r\n            }\r\n            {props.captchaUrl &&\r\n                CreateField(\"Captcha\", \"captcha\", \"\", Input, [required, maxLength35])\r\n            }\r\n            <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData);\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={props.captchaUrl}\r\n                            onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst {createStore} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import './App.css';\r\nimport Navbar from './components/Navbar/Navbar.jsx';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport UsersContainer from \"./components/Users/UsersContainer.jsx\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport React, {lazy} from \"react\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./components/HOC/withSuspense\";\r\n\r\nconst DialogsContainer = lazy( () => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = lazy( () => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Preloader/>\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/profile/:userId?\"\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path=\"/dialogs\"\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path=\"/users\"\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\"\r\n                           render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App)\r\n\r\nconst MainApp = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nwindow.store = store;\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <MainApp/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);","import s from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { meta.touched && meta.error && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, type, component, validators) => {\r\n    return (\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               type={type}\r\n               component={component}\r\n               validate={validators}/>\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Обязательное поле';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength)  return `Максимальная длина - ${maxLength} символов`;\r\n    return undefined;\r\n}","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.ca55bda3.gif\";","import preloader from \"../../../assets/images/Spinner-1s-200px.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__27sFO\",\"error\":\"FormsControls_error__CgSPS\",\"formSummaryError\":\"FormsControls_formSummaryError__1d-lL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2_1oK\",\"pageNumber\":\"Paginator_pageNumber__3sqsv\",\"selectedPage\":\"Paginator_selectedPage__DMJn-\"};","import {profileAPI, usersAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO_SUCCESS = 'SET_PHOTO_SUCCESS';\r\nconst SET_SAVING_PROFILE = 'SET_SAVING_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCounts: '55'},\r\n        {id: 2, message: 'It\\'s my first post', likeCounts: '3'},\r\n        {id: 3, message: 'FSAFASF', likeCounts: '12'},\r\n        {id: 4, message: 'New', likeCounts: '102'}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                likeCounts: 10\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case SET_SAVING_PROFILE:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostBody) => ({type: ADD_POST, newPost: newPostBody})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nconst setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nconst setStatus = (status) => ({type: SET_STATUS, status});\r\nconst setPhotoSuccess = (photos) => ({type: SET_PHOTO_SUCCESS, photos});\r\nconst setSavingProfile = (profileData) => ({type: SET_SAVING_PROFILE, profileData});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profileData)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setSavingProfile(response.data.data.photos));\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2URxB\",\"loginBlock\":\"Header_loginBlock__2dpDV\"};","export default __webpack_public_path__ + \"static/media/ava.d6c9ccff.jpg\";"],"sourceRoot":""}