{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","head","src","descriptionBlock","photos","large","ava","fullName","Preloader","Post","item","alt","message","likeCounts","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPosts","postElements","posts","map","p","data","addPost","newPostBody","MyPostsContainer","profilePage","dispatch","Profile","container","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"4NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBChB/CM,EAAOC,QAAU,CAAC,KAAO,0BAA0B,iBAAmB,wC,oBCAtED,EAAOC,QAAU,CAAC,UAAY,6B,oBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,qJC0CVC,EAzCgB,SAACN,GAC5B,MAA8BO,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASP,EAAMU,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAW,WACPD,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAeV,OACI,iCACMF,GACF,8BACI,sBAAMK,cAjBO,WACrBJ,GAAY,IAgBJ,SAA0CT,EAAMU,QAAU,gBAG7DF,GACD,8BACI,uBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAaXC,OAnBQ,WACvBT,GAAY,GACZT,EAAMmB,aAAaT,IAkBJU,WAAW,EACXH,MAAOP,UCTfW,EApBK,SAACrB,GACjB,OAAKA,EAAMsB,QAKP,gCACI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,qBAAKC,IAAI,6EAGb,sBAAKH,UAAWC,IAAEG,iBAAlB,UACI,qBAAKD,IAAK1B,EAAMsB,QAAQM,OAAOC,MAAQ7B,EAAMsB,QAAQM,OAAOC,MAAQC,MACpE,4BAAI9B,EAAMsB,QAAQS,WAClB,cAAC,EAAD,CAAwBrB,OAAQV,EAAMU,OAAQS,aAAcnB,EAAMmB,qBAZnE,cAACa,EAAA,EAAD,K,8DCMAC,EAZF,SAACjC,GACV,OACI,sBAAKuB,UAAWC,IAAEU,KAAlB,UACI,qBAAKR,IAAI,gEAAgES,IAAI,KAC7E,+BAAOnC,EAAMoC,UACb,8BACI,2CAAcpC,EAAMqC,oB,iCCH9BC,EAAcC,YAAiB,IAsBtBC,EAJUC,YAAU,CAC/BC,KAAM,SADeD,EAhBL,SAACzC,GACjB,OACI,uBAAM2C,SAAU3C,EAAM4C,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,aACZC,KAAK,cACLC,SAAU,CAACC,IAAUb,OAEhC,8BACI,uHCQDc,EApBC,SAACpD,GACb,IAAIqD,EAAerD,EAAMsD,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMpB,QAASoB,EAAEpB,QAASC,WAAYmB,EAAEnB,gBAMhF,OACI,gCACI,0CACA,8BACI,cAAC,EAAD,CAAkBM,SARb,SAACc,GACdzD,EAAM0D,QAAQD,EAAKE,kBASf,qBAAKpC,UAAWC,IAAE8B,MAAlB,SACMD,Q,QCEHO,EAFUzD,aAdH,SAACV,GACnB,MAAO,CACH6D,MAAO7D,EAAMoE,YAAYP,UAIR,SAACQ,GACtB,MAAO,CACHJ,QAAS,SAACC,GACNG,EAASJ,YAAQC,QAKJxD,CAA6CiD,GCNvDW,EATC,SAAC/D,GACb,OACI,sBAAKuB,UAAWC,IAAEwC,UAAlB,UACI,cAAC,EAAD,CAAa1C,QAAStB,EAAMsB,QAASZ,OAAQV,EAAMU,OAAQS,aAAcnB,EAAMmB,eAC/E,cAAC,EAAD,Q,wBCAN8C,E,uKACF,WACI,IAAIC,EAASnE,KAAKC,MAAMmE,MAAMC,OAAOF,OAChCA,IACDA,EAASnE,KAAKC,MAAMqE,mBAEhBtE,KAAKC,MAAMsE,QAAQC,KAAK,UAGhCxE,KAAKC,MAAMwE,eAAeN,GAC1BnE,KAAKC,MAAMyE,UAAUP,K,oBAGzB,WACI,OAAO,cAAC,EAAD,2BAAanE,KAAKC,OAAlB,IAAyBsB,QAASvB,KAAKC,MAAMsB,QAASZ,OAAQX,KAAKC,MAAMU,OAChES,aAAcpB,KAAKC,MAAMmB,oB,GAflBjB,IAAML,WA0BtB6E,4BACXvE,aARkB,SAACV,GAAD,MAAY,CAC9B6B,QAAS7B,EAAMoE,YAAYvC,QAC3BZ,OAAQjB,EAAMoE,YAAYnD,OAC1B2D,iBAAkB5E,EAAME,KAAKuE,OAC7BxE,OAAQD,EAAME,KAAKD,UAIM,CAAC8E,mBAAgBC,cAAWtD,mBACrDwD,IAFWD,CAGbT","file":"static/js/3.233d9d6e.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__3MSlZ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GJJQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__L9o98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__E-v-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__193ju\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       onBlur={ deActivateEditMode }\r\n                       autoFocus={true}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport React from \"react\";\r\nimport ava from \"../../../assets/images/ava.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.head}>\r\n                <img src=\"https://coolwallpapers.me/picsup/2513870-mountains-images-desktops.jpg\" />\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large ? props.profile.photos.large : ava}/>\r\n                <p>{props.profile.fullName}</p>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://object.pscloud.io/cms/cms/Photo/img_0_2080_562_6.jpeg\" alt=\"\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>likes: {props.likeCounts}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter text'\r\n                       name='newPostBody'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Добавить пост</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'posts'\r\n})(AddPostForm)\r\n\r\nexport default AddPostFormRedux;","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from \"react\";\r\nimport AddPostFormRedux from \"./AddPostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map(p => <Post message={p.message} likeCounts={p.likeCounts} />);\r\n\r\n    const onSubmit = (data) => {\r\n        props.addPost(data.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPost(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}