{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileData/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Contact","className","s","contact","contactTitle","contactValue","ProfileData","isOwner","onClick","goToEditMode","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","error","style","formSummaryError","CreateField","Input","Textarea","ProfileInfo","Preloader","head","src","descriptionBlock","photos","large","ava","type","target","files","length","savePhoto","formData","saveProfile","then","initialValues","Post","item","alt","message","likeCounts","maxLength10","maxLengthCreator","AddPostFormRedux","Field","component","placeholder","name","validate","required","MyPosts","postElements","posts","p","data","addPost","newPostBody","MyPostsContainer","profilePage","dispatch","Profile","container","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.687f0ae3.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/social-network/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__3MSlZ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GJJQw\",\"contact\":\"ProfileInfo_contact__XIXiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__L9o98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__E-v-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__193ju\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={ activateEditMode }>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       onBlur={ deActivateEditMode }\r\n                       autoFocus={true}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"../ProfileInfo.module.css\"\r\n\r\nconst Contact = (props) => {\r\n    return <div className={s.contact}>\r\n        <b>{props.contactTitle}</b>: {props.contactValue}\r\n    </div>\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Contact from \"./ProfileContacts\";\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n            <div>\r\n                <button onClick={props.goToEditMode}>Edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full Name</b>: {props.profile.fullName}\r\n            </div>\r\n\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            <div>\r\n                <b>About me</b>: {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {\r\n                props.profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n                return <Contact key={key}\r\n                                contactTitle={key}\r\n                                contactValue={props.profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {CreateField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"../ProfileInfo.module.css\"\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <button onClick={()=>{}}>Save</button>\r\n            </div>\r\n            {props.error &&\r\n                <div className={style.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>Full Name</b>: {CreateField(\"Full name\", \"fullName\", \"\", Input, [])}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {CreateField(\"About me\", \"aboutMe\", \"\", Textarea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {CreateField(\"\", \"lookingForAJob\", \"checkbox\", Input, [])}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: {CreateField(\"Enter your skills\", \"lookingForAJobDescription\", \"\", Textarea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}</b>: {CreateField(key, `contacts.${key}`, \"\", Input, [])}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport React, {useState} from \"react\";\r\nimport ava from \"../../../assets/images/ava.jpg\"\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileDataReduxForm from \"./ProfileData/ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then( () => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.head}>\r\n                <img src=\"https://coolwallpapers.me/picsup/2513870-mountains-images-desktops.jpg\" />\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large ? props.profile.photos.large : ava}/>\r\n                { props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/> }\r\n\r\n                {editMode\r\n                    ? <ProfileDataReduxForm profile={props.profile}\r\n                                            onSubmit={onSubmit}\r\n                                            initialValues={props.profile}/>\r\n                    : <ProfileData profile={props.profile}\r\n                                   isOwner={props.isOwner}\r\n                                   updateStatus={props.updateStatus}\r\n                                   status={props.status}\r\n                                   goToEditMode={ () => {setEditMode(true)}}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://object.pscloud.io/cms/cms/Photo/img_0_2080_562_6.jpeg\" alt=\"\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>likes: {props.likeCounts}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter text'\r\n                       name='newPostBody'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Добавить пост</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'posts'\r\n})(AddPostForm)\r\n\r\nexport default AddPostFormRedux;","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from \"react\";\r\nimport AddPostFormRedux from \"./AddPostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map(p => <Post key={p} message={p.message} likeCounts={p.likeCounts} />);\r\n\r\n    const onSubmit = (data) => {\r\n        props.addPost(data.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPost(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/social-network/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        savePhoto={this.props.savePhoto}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        saveProfile={this.props.saveProfile}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}